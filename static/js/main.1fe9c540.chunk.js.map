{"version":3,"sources":["components/Game.js","App.js","index.js"],"names":["operations","emptyGrid","rows","i","push","Array","from","fill","Game","useState","grid","setGrid","running","setRunning","runningRef","useRef","current","runSimulation","useCallback","g","produce","gridCopy","j","neighbors","forEach","x","y","newI","newJ","setTimeout","className","style","gridTemplateColumns","map","col","onClick","newGrid","width","height","border","backgroundColor","undefined","Math","random","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAMMA,EAAa,CACjB,CAAC,EAAG,GACJ,CAAC,GAAI,GACL,CAAC,GAAI,GACL,CAAC,EAAG,GACJ,EAAE,GAAI,GACN,CAAC,EAAG,GACJ,EAAE,EAAG,GACL,EAAE,EAAG,IAGDC,EAAY,WAEhB,IADA,IAAMC,EAAO,GACJC,EAAI,EAAGA,EAfF,GAeeA,IAC3BD,EAAKE,KAAKC,MAAMC,KAAKD,MAjBT,KAiByBE,KAAK,IAE5C,OAAOL,GAgHMM,EA7GF,WAAO,IAAD,EACOC,oBAAS,WAC/B,OAAOR,OAFQ,mBACVS,EADU,KACJC,EADI,OAKaF,oBAAS,GALtB,mBAKVG,EALU,KAKDC,EALC,KAOXC,EAAaC,iBAAOH,GAC1BE,EAAWE,QAAUJ,EAErB,IAAMK,EAAgBC,uBAAY,WAC3BJ,EAAWE,UAIhBL,GAAQ,SAACQ,GACP,OAAOC,YAAQD,GAAG,SAACE,GACjB,IAD+B,IAAD,WACrBlB,GACP,IAF4B,eAEnBmB,GACP,IAAIC,EAAY,EAChBvB,EAAWwB,SAAQ,YAAa,IAAD,mBAAVC,EAAU,KAAPC,EAAO,KACvBC,EAAOxB,EAAIsB,EACXG,EAAON,EAAII,EACbC,GAAQ,GAAKA,EA5Cf,IA4CiCC,GAAQ,GAAKA,EA7C9C,KA8CAL,GAAaJ,EAAEQ,GAAMC,OAIrBL,EAAY,GAAKA,EAAY,EAC/BF,EAASlB,GAAGmB,GAAK,EACI,IAAZH,EAAEhB,GAAGmB,IAA0B,IAAdC,IAC1BF,EAASlB,GAAGmB,GAAK,IAbZA,EAAI,EAAGA,EAxCV,GAwCuBA,IAAM,EAA1BA,IADFnB,EAAI,EAAGA,EAtCR,GAsCqBA,IAAM,EAA1BA,SAoBb0B,WAAWZ,EAAe,QACzB,IAEH,OACE,gCACE,qBACEa,UAAU,YACVC,MAAO,CACLC,oBAAoB,UAAD,OAnEb,GAmEa,YAHvB,SAMGtB,EAAKuB,KAAI,SAAC/B,EAAMC,GAAP,OACRD,EAAK+B,KAAI,SAACC,EAAKZ,GAAN,OACP,qBAEEa,QAAS,WACP,IAAMC,EAAUhB,YAAQV,GAAM,SAACW,GAC7BA,EAASlB,GAAGmB,GAAKZ,EAAKP,GAAGmB,GAAK,EAAI,KAEpCX,EAAQyB,IAEVL,MAAO,CACLM,MAAO,OACPC,OAAQ,OACRC,OAAQ,cACRC,gBAAiB9B,EAAKP,GAAGmB,GAAK,eAAYmB,IAZ9C,UACUtC,EADV,YACemB,YAiBrB,sBAAKQ,UAAU,MAAf,UACE,wBACEA,UAAU,OACVK,QAAS,WACPtB,GAAYD,GACPA,IACHE,EAAWE,SAAU,EACrBC,MANN,SAUGL,EAAU,OAAS,UAEtB,wBACEkB,UAAU,OACVK,QAAS,WAEP,IADA,IAAMjC,EAAO,GACJC,EAAI,EAAGA,EA1GZ,GA0GyBA,IAC3BD,EAAKE,KACHC,MAAMC,KAAKD,MA7GX,KA6G2B,kBAAOqC,KAAKC,SAAW,GAAM,EAAI,MAE9DhC,EAAQT,IARd,oBAcA,wBACE4B,UAAU,OACVK,QAAS,WACPxB,EAAQV,KACRY,GAAYD,IAJhB,0BC7GOgC,EARH,WACV,OACE,qBAAKd,UAAU,YAAf,SACE,cAAC,EAAD,OCDNe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1fe9c540.chunk.js","sourcesContent":["import produce from \"immer\";\r\nimport { useState, useCallback, useRef } from \"react\";\r\n\r\nconst numCols = 30;\r\nconst numRows = 30;\r\n\r\nconst operations = [\r\n  [0, 1],\r\n  [0, -1],\r\n  [1, -1],\r\n  [1, 1],\r\n  [-1, -1],\r\n  [1, 0],\r\n  [-1, 1],\r\n  [-1, 0],\r\n];\r\n\r\nconst emptyGrid = () => {\r\n  const rows = [];\r\n  for (let i = 0; i < numRows; i++) {\r\n    rows.push(Array.from(Array(numCols)).fill(0));\r\n  }\r\n  return rows;\r\n};\r\n\r\nconst Game = () => {\r\n  const [grid, setGrid] = useState(() => {\r\n    return emptyGrid();\r\n  });\r\n\r\n  const [running, setRunning] = useState(false);\r\n\r\n  const runningRef = useRef(running);\r\n  runningRef.current = running;\r\n\r\n  const runSimulation = useCallback(() => {\r\n    if (!runningRef.current) {\r\n      return;\r\n    }\r\n\r\n    setGrid((g) => {\r\n      return produce(g, (gridCopy) => {\r\n        for (let i = 0; i < numRows; i++) {\r\n          for (let j = 0; j < numCols; j++) {\r\n            let neighbors = 0;\r\n            operations.forEach(([x, y]) => {\r\n              const newI = i + x;\r\n              const newJ = j + y;\r\n              if (newI >= 0 && newI < numRows && newJ >= 0 && newJ < numCols) {\r\n                neighbors += g[newI][newJ];\r\n              }\r\n            });\r\n\r\n            if (neighbors < 2 || neighbors > 3) {\r\n              gridCopy[i][j] = 0;\r\n            } else if (g[i][j] === 0 && neighbors === 3) {\r\n              gridCopy[i][j] = 1;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n    setTimeout(runSimulation, 100);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          gridTemplateColumns: `repeat(${numCols}, 20px)`,\r\n        }}\r\n      >\r\n        {grid.map((rows, i) =>\r\n          rows.map((col, j) => (\r\n            <div\r\n              key={`${i}-${j}`}\r\n              onClick={() => {\r\n                const newGrid = produce(grid, (gridCopy) => {\r\n                  gridCopy[i][j] = grid[i][j] ? 0 : 1;\r\n                });\r\n                setGrid(newGrid);\r\n              }}\r\n              style={{\r\n                width: \"20px\",\r\n                height: \"20px\",\r\n                border: \"1.5px solid\",\r\n                backgroundColor: grid[i][j] ? \"#4f0670\" : undefined,\r\n              }}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n      <div className=\"btn\">\r\n        <button\r\n          className=\"btn1\"\r\n          onClick={() => {\r\n            setRunning(!running);\r\n            if (!running) {\r\n              runningRef.current = true;\r\n              runSimulation();\r\n            }\r\n          }}\r\n        >\r\n          {running ? \"Stop\" : \"Start\"}\r\n        </button>\r\n        <button\r\n          className=\"btn1\"\r\n          onClick={() => {\r\n            const rows = [];\r\n            for (let i = 0; i < numRows; i++) {\r\n              rows.push(\r\n                Array.from(Array(numCols), () => (Math.random() > 0.7 ? 1 : 0))\r\n              );\r\n              setGrid(rows);\r\n            }\r\n          }}\r\n        >\r\n          Random\r\n        </button>\r\n        <button\r\n          className=\"btn1\"\r\n          onClick={() => {\r\n            setGrid(emptyGrid());\r\n            setRunning(!running);\r\n          }}\r\n        >\r\n          clear\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n\r\n","import \"./App.css\";\r\nimport Game from \"./components/Game\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <Game />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}